<!DOCTYPE html>
<html>
  <head>
    <title>SVG Tester</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <style type="text/css">
      SVG {
        width: 960px;
        height: 480px;
      }

      body {
        background-color: grey;
      }
    </style>
  </head>
  <body>
    <script src="http://cdn.sockjs.org/sockjs-0.3.min.js"></script>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="./javascripts/parse.js" charset="utf-8"></script>
    <script src="./javascripts/bitmap.js" charset="utf-8"></script>
    <script type="text/javascript">
      var Message = function(type, attrs) {
        this.type = type;
        this.attrs = attrs;
      };

      Message.prototype.stringify = function() {
        return JSON.stringify({
          'type': this.type,
          'attrs': this.attrs
        });
      };

//////////////

      var width = 48;
      var height = 24;
      var sock = new SockJS('http://localhost:2000/socket');
      var svg;

      sock.onopen = function() {
        console.log("connected");
        svg = d3.select('body').append('svg')
                               .attr('viewBox', '0 0 ' + width + ' ' + height)
                               .attr('width', width)
                               .attr('height', height);

        var bitmap = new Bitmap();

        var initialPoint = randomPoint(width, height);

        var circle = svg.append('circle')
           .attr('cx', initialPoint[0])
           .attr('cy', initialPoint[1])
           .attr('r', 10)
           .attr('fill', 'rgb(255, 255, 255)');

        setInterval(function() {
          var updatePoint = randomPoint(width, height);
          circle
             .transition()
             .attr('cx', updatePoint[0])
             .attr('cy', updatePoint[1]);
          
          var rgb = parseRgb(circle.attr('fill'));

          var circleAttrs = {
            'cx': circle.attr('cx'),
            'cy': circle.attr('cy'),
            'r': circle.attr('r'),
            'red': rgb[0],
            'green': rgb[1],
            'blue': rgb[2]
          };
          var message = new Message('circle', circleAttrs);
          console.log("sending ", message.stringify());
          sock.send(message.stringify());
        }, 30);
      };

      function randomPoint(width, height) {
        var point = [];
        point[0] = Math.floor(Math.random() * width);
        point[1] = Math.floor(Math.random() * height);
        return point;
      }

      function parseRgb(string) {
        var parsed = string.replace('rgb(', '');
        parsed = parsed.replace(')', '');
        parsed = parsed.replace(' ', '');
        return parsed.split(',');
      }
    </script>
  </body>
</html>